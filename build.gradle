buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:7.0.1"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.openapi.generator' version '7.4.0'
}

group = 'com.msa.service.customer'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

apply plugin: "org.openapi.generator"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //openapi dependencies
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
}

tasks.register('buildSpringServer', org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.ms.customer.service.server"
    modelPackage = "com.ms.customer.service.server.models"
    library = "spring-boot"
    configOptions = [
            useSpringBoot3: "true",
            serializableModel: "true",
            dateLibrary: "java8",
            openApiNullable: "false",
            configPackage: "com.ms.customer.service",
            sourceFolder: "src/main/java",
            basePackage: "com.ms",
            interfaceOnly: "true"
    ]
}

compileJava.dependsOn buildSpringServer

sourceSets.main.java.srcDirs = ["$buildDir/generated/src/main/java", "src/main/java"]

tasks.named('test') {
    useJUnitPlatform()
}
